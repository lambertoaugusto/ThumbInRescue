<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>3</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//veriáveis relacionadas ao display
metroAnterior = 0;

//variável quantidade de vidas
globalvar vidas;
global.vidas = 3;



//*********************************desenhando os objetos do display**********************************

//criando na tela as vidas
instance_create(view_xview[0],0,obj_vida);

//criando a engrenagem que aparece no display
eng = instance_create(0,0,obj_eng_display);

//criando o multiplicador na tela
m = instance_create(view_xview[0]+global.larguraView*0.875,sprite_get_height(mult1x)/2, obj_multiplicador);
m.sprite_index = mult1x;
m.image_speed = 0.25;

//variaveis do swipe
MSX = 0;
MSY = 0;
MEX = 0;
MEY = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(movimentoLiberado){
    vspeed = -1*(global.velocidadeRoom);
}
else{
    vspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>MEX = mouse_x ;
MEY = mouse_y ;

// Was that a swipe?

keyboard_key_release(vk_left);
keyboard_key_release(vk_right);

if point_distance(MSX,MSY,MEX,MEY) &gt; 64{
    dir = point_direction(MSX,MSY,MEX,MEY);
    if(dir &gt;= 20 &amp;&amp; dir &lt;= 160){
        if(global.slowFlag == false){
            keyboard_key_press(vk_up);
        }
    }
    else if(dir &gt;= 200 &amp;&amp; dir &lt;= 340){
        if(!global.dashFlag &amp;&amp; nivelDash &gt; 0){
            keyboard_key_press(vk_down);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>MSX = mouse_x ;
MSY = mouse_y ;

if(mouse_x &lt;= room_width/2){
    keyboard_key_press(vk_left);    
}
else{
    keyboard_key_press(vk_right);    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.larguraView &lt; 640){
    m.image_xscale = 1;
    m.image_yscale = 1;   
    dimensao = 0.6;
    menor = true;    
}
else{
    m.image_xscale = 1;
    m.image_yscale = 1;
    dimensao = 0.8;
    menor = false;
}

//exibe na tela o score, o mult e a distancia
draw_set_font(global.fonteNum);
draw_set_color(c_white);

if(menor){        
    //mult
    //m.x = view_xview[0] + global.larguraView - m.sprite_xoffset;
    if(global.janelaFecha != "voltar"){
        fec.image_xscale = 0.8;
        fec.image_yscale = 0.8;    
        global.fec.x = view_xview[0]+view_wview[0]-(sprite_get_xoffset(fechar)*0.8);
        global.fec.y = global.fec.sprite_yoffset;
    }

    m.x = room_width/2;
    m.y = m.sprite_yoffset;    
    //distancia
    draw_set_font(global.fonteDist);
    draw_set_color(c_white);
    score += (y/50 - metroAnterior)*10*global.multiplicador;
    dist = string(y div 50);
    metroAnterior = y/50;
    
    draw_text_transformed(view_xview[0]+sprite_get_width(capacete)*0.7 + 3,0,dist,dimensao,dimensao,0);    
    //score
    eng.image_xscale = 0.9;
    eng.image_yscale = 0.9;
    eng.x = view_xview[0]+sprite_get_width(capacete)*0.7 + 3+eng.sprite_xoffset;
    eng.y = (string_height('1')*0.7)+eng.sprite_yoffset;
    draw_set_font(global.fonteEng);
    draw_set_color(c_white);
    //draw_text_transformed(view_xview[0]+global.larguraView-(string_width(string(global.scoreCounter))*dimensao),2*m.sprite_yoffset,global.scoreCounter,dimensao,dimensao,0);    
    draw_text_transformed(eng.x+eng.sprite_xoffset,eng.y-eng.sprite_yoffset,global.scoreCounter,dimensao,dimensao,0);        
}
else{    
    if(global.janelaFecha != "voltar"){
        fec.image_xscale = 1;
        fec.image_yscale = 1;
        global.fec.x = view_xview[0]+view_wview[0]-sprite_get_xoffset(fechar);
        global.fec.y = global.fec.sprite_yoffset;
    }

    //mult
    m.x = 1280-(m.sprite_width/2);
    m.y = sprite_get_height(mult1x)/2;
    //distancia
    draw_set_font(global.fonteDist);
    draw_set_color(c_white);
    score += (y/50 - metroAnterior)*10*global.multiplicador;
    dist = string(y div 50);
    metroAnterior = y/50;
    draw_text_transformed(sprite_get_width(capacete)+643,0,dist,dimensao,dimensao,0);       
    //score
    eng.image_xscale = 1.5;
    eng.image_yscale = 1.5;
    eng.x = 643+sprite_get_width(capacete)+eng.sprite_xoffset;
    eng.y = (string_height('1'))+eng.sprite_yoffset;
    draw_set_font(global.fonteEng);
    draw_set_color(c_white);
    draw_text_transformed(eng.x+eng.sprite_xoffset,eng.y-eng.sprite_yoffset,global.scoreCounter,dimensao,dimensao,0);
    
}
    //virtual_key_add(0,0,display_get_width()/2,display_get_height(),vk_left);
    //virtual_key_add(display_get_width()/2,0,display_get_width()/2,display_get_height(),vk_right);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
