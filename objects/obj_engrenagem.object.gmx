<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>engrenagem_spr</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vspeed = global.velocidadeRoom;
//stop = false;

// configurando a velocidade da animação.
image_speed = 0.2;

// flag para o objeto engrenagem.
coletada = false;

//tempo que a engrenagem segue o boneco
tempo = 0;

ini_open('SETTINGS.ini');
atrair_status = ini_read_string('LOJA','atrair_status','');
ini_close();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vspeed = global.velocidadeRoom;

if(y+sprite_height &lt; 0){
    instance_destroy();
}


if(global.slowFlag){
    image_speed = 0.1
}

if(gameOver == -1){
// se o player entrar dentro da area de colisão, configura a veriável coletada como pega.
if(atrair_status == 'sim'){
    if(!coletada &amp;&amp; collision_circle(x+sprite_xoffset,y+sprite_yoffset,60,playerEndless_obj,false,false)){   
        audio_sound_gain(audio_play_sound(engrenagem_sound,1,false),0.75,0);
        coletada = true;
        score += global.multiplicador * 10;// calcula o score.
        global.scoreCounter += 1;// incrementa um a scoreCounter.
        //incrementMultiplicador();// verifica se pode incrementar o multiplicador.    
    }
    
    //quando passa 3 segundos apaga a engrenagem
    if(collision_circle(x,y,sprite_xoffset,playerEndless_obj,false,false)){
        instance_destroy();
    }

    // se coletada for igual a true, a engrenagem segue o player.
    if(coletada){
        move_towards_point(playerEndless_obj.x, playerEndless_obj.y, -1*vspeed);
    }
}
else{
    if(!coletada &amp;&amp; collision_rectangle(x,y,x+sprite_width,y+sprite_height,playerEndless_obj,false,false)){   
        audio_sound_gain(audio_play_sound(engrenagem_sound,1,false),0.75,0);
        coletada = true;
        score += global.multiplicador * 10;// calcula o score.
        global.scoreCounter += 1;// incrementa um a scoreCounter.
        //incrementMultiplicador();// verifica se pode incrementar o multiplicador.    
        instance_destroy();
    }
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
