<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>4</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//definindo sprite.
nivelObst = 0;
var contador = 0;
espacoMinimo = playerEndless_obj.sprite_height + 10;

randomize();
obsRandom = irandom(14);
sprite_index = listaObsDest[obsRandom];
if(obsRandom&lt;5){
    nivelObst = 1;
}
else if(obsRandom&lt;10){
    nivelObst = 2;
}
else{
    nivelObst = 3;
}

if(global.nivelDash &gt;= nivelObst){    
    do{
        randomize();
        x = irandom_range(LimiteEsq, LimiteDir - sprite_width);
        y = irandom_range(global.alturaTela,global.alturaTela*2-sprite_height);                    
        contador++;
    }
    until((collision_rectangle(x,y,x+sprite_width,y+sprite_height,obj_blocoEsq,true,false) == noone          
          &amp;&amp;collision_rectangle(x,y,x+sprite_width,y+sprite_height,obj_blocoDir,true,false) == noone
          &amp;&amp;collision_rectangle(x,y,x+sprite_width,y+sprite_height,obj_obstaculo,true,false) == noone)
          ||contador &gt;= 5);
}
else{        
    do{
        randomize();
        x = irandom_range(LimiteEsq, LimiteDir - sprite_width);
        y = irandom_range(global.alturaTela,(global.alturaTela*2)-sprite_height);              
        contador++;    
    } 
    until(posicaoValida(true,espacoMinimo)||contador &gt;= 5);
}

if(contador &gt;= 5){
    instance_destroy();
}
else{
    instance_create(LimiteEsq,y+sprite_height/2,obj_parede);
}
//fim do if do sprite


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vspeed = global.velocidadeRoom;

if(y &lt;= (-1*sprite_get_height(listaObsDest[obsRandom]))){
    instance_destroy();
}
if(gameOver == -1){
    if(nivelObst == 1){
        colidir_com_soft(obj_obsDest,playerEndless_obj)    
        //decrementa vida dependendo se dash nao ativado!!!
    }
    else if(global.nivelDash &gt;= nivelObst &amp;&amp; global.dashFlag){
        colidir_com_soft(obj_obsDest,playerEndless_obj)    
        //quebra o obst
    }
    else
    {
        colidir_com_indestrutivel(obj_obsDest,playerEndless_obj);
        //morre!
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
