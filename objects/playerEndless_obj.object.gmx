<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>player_olhando</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0.3;
criouDisplay = false;

globalvar jetpack;//variável que indica qual jetpack o player está. 0 = sem jetpack
global.jetpack = 0;

globalvar nivelDash; //variável que armazena o nivel do dash
global.nivelDash = 0;

//globalvar distancia;
//global.distancia = 0;

// definindo a velocidade de descida do player.
vspeed = 0;
//y = 0;

//variáveis da oscilação do player
globalvar estabilizado;
global.estabilizado = false;

flutuandoAcima = false;// variável auxiliar para a oscilação

globalvar contadorDeFlutuacao;
global.contadorDeFlutuacao = 0;// conta 50 pixels a baixo e 50 pixels acima.

//Variáveis do dash e slow

global.dashFlag = false; // criando um flag para controlar o dash do player.
global.slowFlag = false; // definindo um flag para controlar o slow do player.

//veriáveis definidas pelo gabriel
//vivo = 1  -&gt; condição normal
//vivo = 0  -&gt; morreu
//vivo = -1 -&gt; sofrendo algum dano (rodando ou batendo os braços) 
global.vivo=1;

//flag para dar tempo da animação do boneco morrendo
globalvar batSolido2;
global.batSolido2 = false;

//variável que armazena o tempo para a animação morrendo poder acontecer
globalvar tempoBatSolido2;
global.tempoBatSolido2 = 0;

//variável que armazena o tempo de duração da animação de morte
globalvar tempoBatMorto2;
global.tempoBatMorto2 = 0;

//flag que indica que está executando a animção de bater a direita
globalvar batDir;
global.batDir = false;

//variavel que armazena o tempo da animação batendo direita
globalvar tempoBatDir;
global.tempoBatDir = 0;

//flag que indica que está executando a animção de bater a esquerda
globalvar batEsq;
global.batEsq = false;

//variavel que armazena o tempo da animação batendo esquerda
globalvar tempoBatEsq;
global.tempoBatEsq = 0;

//flag que verifica se esta batendo de frente
globalvar batFrente;
global.batFrente = false;

//variavel que armazena o tempo da animação batendo os braços
globalvar tempoBatFrente;
global.tempoBatFrente = 0;

//flag que verifica se o player está entrando na tela, inicio de jogo
globalvar entrada;
global.entrada=true;

//flag que verifica se já iniciou o novo jogo para pegar o tempo correto
globalvar pegouTempo;
global.pegouTempo = false;

//variavel que armazena o tempo inicial do jogo
globalvar tempoEntrada;
global.tempoEntrada = 0;

//flag que verifica se o player pode se mover
globalvar movimentoLiberado;
global.movimentoLiberado = false;

//flag que verifica se o player está em subida da entrada da room
globalvar subindo;
global.subindo = false;

//flag para verificar que o sprite está girando
girandoDir = false;

//flag para verificar que o sprite está girando
girandoEsq = false;

//variáveis do movimento lateral
tempoX = 0;
globalvar tempoXLiberado;
global.tempoXLiberado = true;

//variaveis relacionadas ao movimento de esquiva a direita
esquivaDir = 0;
quantDir = 0;

//variaveis relacionadas ao movimento de esquiva a esquerda
quantEsq = 0;
esquivaEsq = 0;

//variável que determina a velocidade do jogo
globalvar tempo_jogo;
global.tempo_jogo = 1;

globalvar esq_ok;
global.esq_ok=1;

globalvar fazendoAnimacao;
global.fazendoAnimacao = false;

//flag que informa que o player está entrando na tela
globalvar entradaTela;
global.entradaTela = true;

esquivou = false;

tempoGO = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Criando e configurando o rastro.

/*global.particle = part_system_create();
alpha = 0.5;
part_system_depth(global.particle,1);
global.rastro = part_type_create();
part_type_gravity(global.rastro,1,90);
part_type_life(global.rastro,20,20);
part_type_color_mix(global.rastro,c_aqua,c_blue);  
part_type_alpha1(global.rastro,alpha);
global.emitter = part_emitter_create(global.particle);
*/
//alarm[1] = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mudarSprite(playerEndless_obj,9);
gameOver = 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Executando o rastro.

if(gameOver == -1){

/*part_type_sprite(global.rastro,sprite_index,false,false,false);
part_type_orientation(global.rastro,270,270,0,0,true);
part_emitter_region(global.particle,global.emitter,x,x,y,y,ps_shape_rectangle,ps_distr_linear);    
part_emitter_burst(global.particle,global.emitter,global.rastro,1);
*/
alarm[1] = 3;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reconfigurando estados iniciais do player.

global.velocidadeRoom = -15;
global.slowFlag = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Area destinada ao controle do jogo com chamada dos Scripts
if(gameOver != -1){
    global.movimentoLiberado = false;
    script_gameOver();    
}
else{
    //movVert();
    if(global.movimentoLiberado &amp;&amp; !entradaTela){
        //global.velocidadebackground = 1;
        if(!global.dashFlag){
            movLat();            
            slow_down();        
        }
        oscilacao();
        dash();
    }        
    batendo(playerEndless_obj);        
}

if (endOfPath &amp;&amp; !pegouTempo &amp;&amp; global.entrada){// &amp;&amp; global.velocidadeRoom != 0){
    global.tempoEntrada = get_timer();
    pegouTempo = true;
}
else if(pegouTempo &amp;&amp; global.entrada){
    entrada_view_endless();        
}

//criando o display na tela somente quando o movimento é liberado
if(!criouDisplay &amp;&amp; global.movimentoLiberado){
    instance_create(0,0,obj_display);
    criouDisplay = true;
}


//começa a subir o player até chegar a posição inicial de 95 aguardando 2 segundos na posição 360

/*
if (global.entrada &amp;&amp; global.velocidadeRoom != 0){
    entrada_view_endless();
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_end()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
